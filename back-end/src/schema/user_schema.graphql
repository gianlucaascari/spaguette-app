type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  plan: Plan
  list: List
  addRequests: [AddRequest!]
}

type AuthUser {
  user: User!
  token: String!
}

type OthUser {
  status: Int!
  user: User!
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  name: String!
  email: String!
  password: String!
}

type Query {
  getFriends: [User!]!
  getUsers(searchString: String): [OthUser!]!
  getUser(id: ID!): OthUser

  getFriendRequests: [OthUser!]!
}

type Mutation {
  signUp(input: SignUpInput!): AuthUser
  signIn(input: SignInInput!): AuthUser

  sendFriendshipRequest(userID: ID!): Int!
  answerFriendshipRequest(userID: ID!, mode: Int!): Int!      # mode 0: refuse, mode 1: accept | return status
}
